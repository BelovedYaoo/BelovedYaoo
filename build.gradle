plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'io.freefair.aspectj.post-compile-weaving' version '8.11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects {

    apply {
        plugin 'java'
        plugin 'org.springframework.boot'
        plugin 'io.spring.dependency-management'
        // 只有特定模块启用静态织入
        def staticWeaveModules = ['Weaver']
        if (staticWeaveModules.contains(project.name)) {
            plugin 'io.freefair.aspectj.post-compile-weaving'
        }
    }

    group = 'top.belovedyaoo'
    version = '1.0.0'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs += ['--enable-preview']
        options.compilerArgs += ['-parameters']
    }

    tasks.named('bootRun', org.springframework.boot.gradle.tasks.run.BootRun) {
        jvmArgs '--enable-preview'
    }

    repositories {
        mavenCentral()
    }

    dependencies {

        // Spring Web
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // Spring Validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // Spring Actuator
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        // Spring Data Redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // Apache Commons Codec
        implementation 'org.netbeans.external:org-apache-commons-codec:RELEASE230'

        // AspectJ 运行时库
        implementation 'org.aspectj:aspectjrt:1.9.22.1'

        // AspectJ 编译器
        //implementation 'org.aspectj:aspectjtools:1.9.22.1'

        // AspectJ Weaver
        implementation 'org.aspectj:aspectjweaver:1.9.22.1'
        annotationProcessor 'org.aspectj:aspectjweaver:1.9.22.1'

        // Reflections, 仓库地址: https://github.com/ronmamo/reflections
        //implementation 'org.reflections:reflections:0.10.2'

        // MySQL Driver
        runtimeOnly 'com.mysql:mysql-connector-j'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // MyBatis-Flex
        implementation 'com.mybatis-flex:mybatis-flex-spring-boot3-starter:1.10.1'
        annotationProcessor 'com.mybatis-flex:mybatis-flex-processor:1.10.1'

        // Auto Table, 官方文档: https://autotable.tangzc.com/
        implementation 'org.dromara.autotable:auto-table:2.0.2'

        // MyBatis-Flex + Auto Table的拓展包, 仓库地址: https://gitee.com/tangzc/mybatis-flex-ext
        implementation 'com.tangzc:mybatis-flex-ext-spring-boot3-starter:1.10.2.100'

        // Sa-Token
        implementation 'cn.dev33:sa-token-spring-boot3-starter:1.39.0'

        // Sa-Token 整合 Redis （使用 jackson 序列化方式）
        implementation 'cn.dev33:sa-token-redis-jackson:1.39.0'

        // Sa-Token 整合 jwt
        implementation 'cn.dev33:sa-token-jwt:1.39.0'

        // Jedis
        implementation 'redis.clients:jedis:5.2.0'

        // Jackson Core
        implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'

        // Jackson Annotations
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'

        // Jackson Databind
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

        // HuTool
        implementation 'cn.hutool:hutool-all:5.8.34'

        // OK HTTPS
        implementation 'com.ejlchina:okhttps:3.1.1'

        // Oshi
        implementation 'com.github.oshi:oshi-core:6.6.5'

    }

}
